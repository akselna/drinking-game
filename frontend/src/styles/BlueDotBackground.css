/* Save this as BlueDotBackground.css */
.background-root {
  min-height: 100vh;
  background: #000;
  overflow: hidden;
  position: relative;
  color: white;
}

.background-container {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: radial-gradient(ellipse at center, #0a0a2e 0%, #000 100%);
  z-index: 1;
}

.dots-grid {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 90%;
  height: 80%;
  display: grid;
  grid-template-columns: repeat(15, 1fr);
  grid-template-rows: repeat(8, 1fr);
  gap: 20px;
  perspective: 1000px;
}

.dot {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
}

.dot::before {
  content: "";
  position: absolute;
  width: 30px;
  height: 30px;
  background: radial-gradient(circle, #4d9eff 0%, #1a5fb4 50%, transparent 70%);
  border-radius: 50%;
  box-shadow: 0 0 20px #4d9eff, 0 0 40px #4d9eff, 0 0 60px #1a5fb4,
    inset 0 0 20px #4d9eff;
  animation: pulse 3s ease-in-out infinite;
  animation-delay: calc(var(--i) * 0.1s);
}

.dot:nth-child(odd)::before {
  animation-duration: 2.5s;
}

.dot:nth-child(even)::before {
  animation-duration: 3.5s;
}

.dot:nth-child(n + 45):nth-child(-n + 75)::before {
  width: 40px;
  height: 40px;
  box-shadow: 0 0 30px #4d9eff, 0 0 60px #4d9eff, 0 0 90px #1a5fb4,
    inset 0 0 30px #4d9eff;
}

.dot:nth-child(-n + 15)::before,
.dot:nth-child(n + 106)::before,
.dot:nth-child(15n + 1)::before,
.dot:nth-child(15n)::before {
  width: 20px;
  height: 20px;
  opacity: 0.7;
}

@keyframes pulse {
  0%,
  100% {
    transform: scale(1);
    opacity: 0.8;
  }
  50% {
    transform: scale(1.1);
    opacity: 1;
  }
}

.ambient-light {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 200%;
  height: 200%;
  background: radial-gradient(
    circle at center,
    transparent 0%,
    rgba(26, 95, 180, 0.1) 50%,
    transparent 100%
  );
  animation: rotate 20s linear infinite;
}

@keyframes rotate {
  from {
    transform: translate(-50%, -50%) rotate(0deg);
  }
  to {
    transform: translate(-50%, -50%) rotate(360deg);
  }
}

.content-overlay {
  position: relative;
  z-index: 10;
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: 100vh;
  padding: 20px;
}

/* Keyframe animations for components */
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(-20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideInLeft {
  from {
    opacity: 0;
    transform: translateX(-50px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes slideInRight {
  from {
    opacity: 0;
    transform: translateX(50px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes scaleIn {
  from {
    opacity: 0;
    transform: scale(0.8);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}
